desc: Self definition of manifest

attrs:
  id:
    type: string
    desc: Profile identificator
  desc:
    type: string
    desc: Profile description string 
  attrs:
    type: Map
    desc: Key-Value list of elements
    val:
      desc: Element definition
      rules:
        minmaxItems:
          when: .minItems and .maxItems
          shell: .minItems <= .maxItems
          desc: .minItems could not be more than .maxItems
        maptype:
          when: .val
          shell: .type = 'Map'
          desc: "element .val only work with .type='Map'"
      attrs:
        desc:
          desc: Element description
          type: string
        coll:
          desc: Is element a collection?
          type: boolean
        req:
          desc: Is this element required?
          type: boolean
        minItems:
          desc: Lower bound of elements in collection
          type: positiveInt
        maxItems:
          desc: Upper bound of elements in collection
          type: positiveInt
        ref:
          desc: Pointer for recursive definition from root of document
          type: string
          coll: true
        ext:
          desc: extension url; if present element considered as extension
          type: string
        rules:
          type: Map
          desc: Additional validation rules as key value
          value:
            attrs:
              when:
                desc: fhirpath expression
              shell:
                desc: fhirpath expression
              desc:
                desc: 'Error description'
        vs:
          desc: Terminology binding
          rules:
            codesOrConcepts:
              when: .codes
              then: .concepts.not()
              desc: Use .codes or .concepts
          attrs:
            open:
              desc: is valueset open for other codes? By default is closed!
              type: boolean
            desc: {type: string}
            id:
              desc: valueset id or url
              type: string
            system:
              desc: system for codes or concepts if only one
              type: string
            codes:
              desc: List of codes
              type: string
              coll: true
            concepts:
              desc: List of concepts
              coll: true
              attrs:
                code:
                  req: true
                  desc: Concept code
                  type: string
                system:
                  desc: Concept system; if not present - taken from vs.system
                  type: string
                display:
                  desc: Concept display
                  type: string
        type:
          desc: Element type
          type: string
          vs:
            system: fhir:types
            codes:
              - Map
              - string
              - boolean
              - positiveInt
              - date
              - instant
        attrs:
          ref: [attrs,attrs]
